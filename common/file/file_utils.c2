/* Copyright 2022-2025 Bas van den Berg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

module file_utils;

import c_errno local;
import libc_fcntl local;
import string local;
import sys_stat local;
import unistd local;

// returns 0 on success, errno on failure
public fn i32 create_directory(const char* path) {
    i32 fd = openat(AT_FDCWD, ".", O_RDONLY);
    if (fd == -1) return errno;

    char[256] tmp;
    const char* cp = path;
    i32 errno_ = 0;
    if (*cp == '/') {
        cp++;
        if (chdir("/")) errno_ = errno;
    }
    while (!errno_ && *cp) {
        const char* slash = strchr(cp, '/');
        if (slash) {
            usize len = cast<usize>(slash - cp);
            assert(len < elemsof(tmp));
            memcpy(tmp, cp, len);
            tmp[len] = '\0';
            cp = slash + 1;
            if (!len) continue; // ignore // and trailing slash
            if ((mkdir(tmp, 0777) && errno != EEXIST) || chdir(tmp)) {
                errno_ = errno;
                break;
            }
        } else {
            if (mkdir(cp, 0777) && errno != EEXIST) errno_ = errno;
            break;
        }
    }
    fchdir(fd);
    close(fd);
    return errno_;
}

public fn bool exists(const char* filename) {
    Stat statbuf;
    // TODO also check regular file
    return (stat(filename, &statbuf) == 0);
}

