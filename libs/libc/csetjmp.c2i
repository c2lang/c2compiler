module csetjmp;

import c2 local;

type JmpBufTag struct @(cname="__jmp_buf_tag", aligned=8) {
#if SYSTEM_LINUX
    char[200] data; // for 64-bit
#endif
#if SYSTEM_DARWIN
    // Should be i32[((14 + 8 + 2) * 2)] data;
    // but size is tested explicitly in
    // test/globals/static_asserts/static_assert_jmpbuf.c2
    // and 200 > 192, so this is just suboptimal.
    //i32[((14 + 8 + 2) * 2)] data;
    char[200] data;
#endif
}

type JmpBuf JmpBufTag* @(cname="jmp_buf");

// TODO alias setjmp -> _setjmp
fn i32 setjmp(JmpBuf __env);

fn i32 _setjmp(JmpBuf __env);


fn void longjmp(JmpBuf __env, i32 __val) @(noreturn);

// FIXME: these belong in unistd.c2
fn c_uint sleep(c_uint __seconds);
fn c_char* getcwd(char* buf, c_size size);
fn c_int chdir(const c_char* path);

const u8 R_OK = 4;
const u8 W_OK = 2;
const u8 X_OK = 1;
const u8 F_OK = 0;

