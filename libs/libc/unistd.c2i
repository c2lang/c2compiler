module unistd;

import c2 local;

/* Standard file descriptors.  */
const c_int STDIN_FILENO  = 0;
const c_int STDOUT_FILENO = 1;
const c_int STDERR_FILENO = 2;

// ifdef USE_XOPEN_EXTENDED ..
fn i32 usleep(c_ulonglong __useconds);

fn c_uint sleep(c_uint __seconds);
fn c_char* getcwd(char* buf, c_size size);
fn c_int chdir(const c_char* path);
fn c_int fchdir(c_int fd);

fn c_int close(c_int fd);

fn c_long read(c_int fd, void* buf, c_ulong count);

const u8 R_OK = 4;
const u8 W_OK = 2;
const u8 X_OK = 1;
const u8 F_OK = 0;

fn c_int isatty(c_int fd);

fn c_ssize write(c_int fd, const void* buf, c_size count);

fn c_int pipe(c_int* pipefd);

//#ifdef_GNU_SOURCE             /* See feature_test_macros(7) */
fn c_int pipe2(c_int* pipefd, c_int flags);

fn c_int unlink(const char* name);

fn c_int rmdir(const char* path);


fn c_int getopt(i32 argc, char** argv, const char* optstring);

char* optarg;
c_int optind;
c_int opterr;
c_int optopt;

fn c_int fsync(c_int fd);

fn void sync();

type Pid c_int @(cname="pid_t");

fn Pid fork();

fn Pid wait(c_int* wstatus);

fn Pid waitpid(Pid pid, c_int* wstatus, c_int options);

fn c_int dup(c_int oldfd);

fn c_int dup2(c_int oldfd, c_int newfd);

fn c_int dup3(c_int oldfd, c_int newfd, c_int flags);

fn c_int execl(const char *pathname, const char *arg, ...);
fn c_int execlp(const char *file, const char *arg, ...);
fn c_int execle(const char *pathname, const char *arg, ...);
fn c_int execv(const char *pathname, char** argv); // actually char* const argv[]
fn c_int execvp(const char *file, char** argv);    // actually char* const argv[]
fn c_int execvpe(const char *file, char** argv, const char** envp); // actually char* const envp[]

fn c_int kill(Pid pid, c_int signal);

fn c_long sysconf(c_int name);

#if SYSTEM_LINUX
// sysconf names per IEEE Std 1003.1, 2008 Edition, values for linux
const u32 _SC_ARG_MAX = 0;
const u32 _SC_CHILD_MAX = 1;
const u32 _SC_CLK_TCK = 2;
const u32 _SC_NGROUPS_MAX = 3;
const u32 _SC_OPEN_MAX = 4;
const u32 _SC_JOB_CONTROL = 7;
const u32 _SC_SAVED_IDS = 8;
const u32 _SC_VERSION = 29;
const u32 _SC_PAGESIZE = 30;
const u32 _SC_PAGE_SIZE = 30;
const u32 _SC_NPROCESSORS_CONF = 83;
const u32 _SC_NPROCESSORS_ONLN = 84;
const u32 _SC_PHYS_PAGES = 85;
const u32 _SC_AVPHYS_PAGES = 86;
const u32 _SC_MQ_OPEN_MAX = 27;
const u32 _SC_MQ_PRIO_MAX = 28;
const u32 _SC_RTSIG_MAX = 31;
const u32 _SC_SEM_NSEMS_MAX = 32;
const u32 _SC_SEM_VALUE_MAX = 33;
const u32 _SC_SIGQUEUE_MAX = 34;
const u32 _SC_TIMER_MAX = 35;
const u32 _SC_TZNAME_MAX = 6;
const u32 _SC_ASYNCHRONOUS_IO = 12;
const u32 _SC_FSYNC = 15;
const u32 _SC_MAPPED_FILES = 16;
const u32 _SC_MEMLOCK = 17;
const u32 _SC_MEMLOCK_RANGE = 18;
const u32 _SC_MEMORY_PROTECTION = 19;
const u32 _SC_MESSAGE_PASSING = 20;
const u32 _SC_PRIORITIZED_IO = 13;
const u32 _SC_REALTIME_SIGNALS = 9;
const u32 _SC_SEMAPHORES = 21;
const u32 _SC_SHARED_MEMORY_OBJECTS = 22;
const u32 _SC_SYNCHRONIZED_IO = 14;
const u32 _SC_TIMERS = 11;
const u32 _SC_AIO_LISTIO_MAX = 23;
const u32 _SC_AIO_MAX = 24;
const u32 _SC_AIO_PRIO_DELTA_MAX = 25;
const u32 _SC_DELAYTIMER_MAX = 26;
const u32 _SC_THREAD_KEYS_MAX = 74;
const u32 _SC_THREAD_STACK_MIN = 75;
const u32 _SC_THREAD_THREADS_MAX = 76;
const u32 _SC_TTY_NAME_MAX = 72;
const u32 _SC_THREADS = 67;
const u32 _SC_THREAD_ATTR_STACKADDR = 77;
const u32 _SC_THREAD_ATTR_STACKSIZE = 78;
const u32 _SC_THREAD_PRIORITY_SCHEDULING = 79;
const u32 _SC_THREAD_PRIO_INHERIT = 80;
const u32 _SC_THREAD_PRIO_PROTECT = 81;
const u32 _SC_THREAD_PROCESS_SHARED = 82;
const u32 _SC_THREAD_SAFE_FUNCTIONS = 68;
const u32 _SC_GETGR_R_SIZE_MAX = 69;
const u32 _SC_GETPW_R_SIZE_MAX = 70;
const u32 _SC_LOGIN_NAME_MAX = 71;
const u32 _SC_ADVISORY_INFO = 132;
const u32 _SC_ATEXIT_MAX = 87;
const u32 _SC_BARRIERS = 133;
const u32 _SC_BC_BASE_MAX = 36;
const u32 _SC_BC_DIM_MAX = 37;
const u32 _SC_BC_SCALE_MAX = 38;
const u32 _SC_BC_STRING_MAX = 39;
const u32 _SC_CLOCK_SELECTION = 137;
const u32 _SC_COLL_WEIGHTS_MAX = 40;
const u32 _SC_CPUTIME = 138;
const u32 _SC_EXPR_NEST_MAX = 42;
const u32 _SC_HOST_NAME_MAX = 180;
const u32 _SC_IOV_MAX = 60;
const u32 _SC_IPV6 = 235;
const u32 _SC_LINE_MAX = 43;
const u32 _SC_MONOTONIC_CLOCK = 149;
const u32 _SC_RAW_SOCKETS = 236;
const u32 _SC_READER_WRITER_LOCKS = 153;
const u32 _SC_REGEXP = 155;
const u32 _SC_RE_DUP_MAX = 44;
const u32 _SC_SHELL = 157;
const u32 _SC_SPAWN = 159;
const u32 _SC_SPIN_LOCKS = 154;
const u32 _SC_SPORADIC_SERVER = 160;
const u32 _SC_SS_REPL_MAX = 241;
const u32 _SC_SYMLOOP_MAX = 173;
const u32 _SC_THREAD_CPUTIME = 139;
const u32 _SC_THREAD_SPORADIC_SERVER = 161;
const u32 _SC_TIMEOUTS = 164;
const u32 _SC_TRACE = 181;
const u32 _SC_TRACE_EVENT_FILTER = 182;
const u32 _SC_TRACE_EVENT_NAME_MAX = 242;
const u32 _SC_TRACE_INHERIT = 183;
const u32 _SC_TRACE_LOG = 184;
const u32 _SC_TRACE_NAME_MAX = 243;
const u32 _SC_TRACE_SYS_MAX = 244;
const u32 _SC_TRACE_USER_EVENT_MAX = 245;
const u32 _SC_TYPED_MEMORY_OBJECTS = 165;
const u32 _SC_V7_ILP32_OFF32 = 237;
#endif

#if SYSTEM_DARWIN
const u32 _SC_ARG_MAX = 1;
const u32 _SC_CHILD_MAX = 2;
const u32 _SC_CLK_TCK = 3;
const u32 _SC_NGROUPS_MAX = 4;
const u32 _SC_OPEN_MAX = 5;
const u32 _SC_JOB_CONTROL = 6;
const u32 _SC_SAVED_IDS = 7;
const u32 _SC_VERSION = 8;
const u32 _SC_PAGESIZE = 29;
const u32 _SC_PAGE_SIZE = 29;
const u32 _SC_NPROCESSORS_CONF = 57;
const u32 _SC_NPROCESSORS_ONLN = 58;
const u32 _SC_PHYS_PAGES = 200;
const u32 _SC_MQ_OPEN_MAX = 46;
const u32 _SC_MQ_PRIO_MAX = 75;
const u32 _SC_RTSIG_MAX = 48;
const u32 _SC_SEM_NSEMS_MAX = 49;
const u32 _SC_SEM_VALUE_MAX = 50;
const u32 _SC_SIGQUEUE_MAX = 51;
const u32 _SC_TIMER_MAX = 52;
const u32 _SC_TZNAME_MAX = 27;
const u32 _SC_ASYNCHRONOUS_IO = 28;
const u32 _SC_FSYNC = 38;
const u32 _SC_MAPPED_FILES = 47;
const u32 _SC_MEMLOCK = 30;
const u32 _SC_MEMLOCK_RANGE = 31;
const u32 _SC_MEMORY_PROTECTION = 32;
const u32 _SC_MESSAGE_PASSING = 33;
const u32 _SC_PRIORITIZED_IO = 34;
const u32 _SC_REALTIME_SIGNALS = 36;
const u32 _SC_SEMAPHORES = 37;
const u32 _SC_SHARED_MEMORY_OBJECTS = 39;
const u32 _SC_SYNCHRONIZED_IO = 40;
const u32 _SC_TIMERS = 41;
const u32 _SC_AIO_LISTIO_MAX = 42;
const u32 _SC_AIO_MAX = 43;
const u32 _SC_AIO_PRIO_DELTA_MAX = 44;
const u32 _SC_DELAYTIMER_MAX = 45;
const u32 _SC_THREAD_KEYS_MAX = 86;
const u32 _SC_THREAD_STACK_MIN = 93;
const u32 _SC_THREAD_THREADS_MAX = 94;
const u32 _SC_TTY_NAME_MAX = 101;
const u32 _SC_THREADS = 96;
const u32 _SC_THREAD_ATTR_STACKADDR = 82;
const u32 _SC_THREAD_ATTR_STACKSIZE = 83;
const u32 _SC_THREAD_PRIORITY_SCHEDULING = 89;
const u32 _SC_THREAD_PRIO_INHERIT = 87;
const u32 _SC_THREAD_PRIO_PROTECT = 88;
const u32 _SC_THREAD_PROCESS_SHARED = 90;
const u32 _SC_THREAD_SAFE_FUNCTIONS = 91;
const u32 _SC_GETGR_R_SIZE_MAX = 70;
const u32 _SC_GETPW_R_SIZE_MAX = 71;
const u32 _SC_LOGIN_NAME_MAX = 73;
const u32 _SC_ADVISORY_INFO = 65;
const u32 _SC_ATEXIT_MAX = 107;
const u32 _SC_BARRIERS = 66;
const u32 _SC_BC_BASE_MAX = 9;
const u32 _SC_BC_DIM_MAX = 10;
const u32 _SC_BC_SCALE_MAX = 11;
const u32 _SC_BC_STRING_MAX = 12;
const u32 _SC_CLOCK_SELECTION = 67;
const u32 _SC_COLL_WEIGHTS_MAX = 13;
const u32 _SC_CPUTIME = 68;
const u32 _SC_EXPR_NEST_MAX = 14;
const u32 _SC_HOST_NAME_MAX = 72;
const u32 _SC_IOV_MAX = 56;
const u32 _SC_IPV6 = 118;
const u32 _SC_LINE_MAX = 15;
const u32 _SC_MONOTONIC_CLOCK = 74;
const u32 _SC_RAW_SOCKETS = 119;
const u32 _SC_READER_WRITER_LOCKS = 76;
const u32 _SC_REGEXP = 77;
const u32 _SC_RE_DUP_MAX = 16;
const u32 _SC_SHELL = 78;
const u32 _SC_SPAWN = 79;
const u32 _SC_SPIN_LOCKS = 80;
const u32 _SC_SPORADIC_SERVER = 81;
const u32 _SC_SS_REPL_MAX = 126;
const u32 _SC_SYMLOOP_MAX = 120;
const u32 _SC_THREAD_CPUTIME = 84;
const u32 _SC_THREAD_SPORADIC_SERVER = 92;
const u32 _SC_TIMEOUTS = 95;
const u32 _SC_TRACE = 97;
const u32 _SC_TRACE_EVENT_FILTER = 98;
const u32 _SC_TRACE_EVENT_NAME_MAX = 127;
const u32 _SC_TRACE_INHERIT = 99;
const u32 _SC_TRACE_LOG = 100;
const u32 _SC_TRACE_NAME_MAX = 128;
const u32 _SC_TRACE_SYS_MAX = 129;
const u32 _SC_TRACE_USER_EVENT_MAX = 130;
const u32 _SC_TYPED_MEMORY_OBJECTS = 102;
#endif

fn c_ulong lseek (i32 fd, c_ulong offset, i32 whence);

