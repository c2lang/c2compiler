// @warnings{no-unused}
module test;

type Struct struct {
    i32 x;
}

type Enum enum u32 {
    A, B
}

fn void test1(Struct* s) {
    u64 a = cast<u64>(s);
    u64 a1 = (u64)(s);
    u64 a2 = (u64)s;
    u32 b = cast<u32>(s);     // @error{pointers may only be cast to integer type 'u64'}
    u32 b1 = (u32)(s);     // @error{pointers may only be cast to integer type 'u64'}
    u32 b2 = (u32)s;     // @error{pointers may only be cast to integer type 'u64'}
}

fn void test2(Struct* s) {
    bool c = cast<bool>(s);       // @error{pointers may only be cast to integer type 'u64'}
    bool c1 = (bool)(s);       // @error{pointers may only be cast to integer type 'u64'}
    bool c2 = (bool)s;       // @error{pointers may only be cast to integer type 'u64'}
}

fn void test3(Struct* s) {
    Enum d = cast<Enum>(s);       // @error{invalid cast from 'test.Struct*' to 'test.Enum'}
    Enum d1 = (Enum)(s);       // @error{invalid cast from 'test.Struct*' to 'test.Enum'}
    Enum d2 = (Enum)s;       // @error{invalid cast from 'test.Struct*' to 'test.Enum'}
}

