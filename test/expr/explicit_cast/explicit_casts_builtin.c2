// @warnings{no-unused}
module test;

type Struct struct {
    i32 x;
}

type Alias i32;

type Enum enum u32 {
    A, B
}

type Func fn void(i32);

fn void test1(i32 a) {
    void* b = cast<Struct>(a);  // @error{used type 'test.Struct' where arithmetic or pointer type is required}
}

fn void test1a(i32 a) {
    void* b1 = (Struct)(a);  // @error{used type 'test.Struct' where arithmetic or pointer type is required}
}

fn void test2(i32 a) {
    Enum b = cast<Enum>(a);
    Enum b1 = (Enum)(a);
}

fn void test3(i32 a) {
    Func b = cast<Func>(a); // @error{only integers of type 'u64' may be cast to a pointer}
}

fn void test3a(i32 a) {
    Func b1 = (Func)(a); // @error{only integers of type 'u64' may be cast to a pointer}
}

fn void test4(u64 a) {
    Func b = cast<Func>(a);
    Func b1 = (Func)(a);
}

fn void test5(i32 a) {
    i32 b = cast<Alias>(a);
    i32 b1 = (Alias)(a);
    i32 b2 = (Alias)a;
    i32 b3 = (Alias)+a;
    i32 b4 = (Alias)-a;
    i32 b5 = (Alias)*&a;
    i32 b6 = (Alias)~a;
    i32 b7 = (Alias)!a;
}

fn void test6(i32 a) {
    i32 b = cast<test>(a); // @error{'test' is not a type}
}

fn void test6a(i32 a) {
    i32 b1 = (test)a; // @error{'test' is not a type}
}

