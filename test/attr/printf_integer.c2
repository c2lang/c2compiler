// @warnings{no-unused}
module test;

fn void log(const char* format @(printf_format), ...) { }

fn void test1() {
    log("%d", 10);
    log("%4d", 10);
    log("%-4d", 10);
    log("%x", 10);
    log("%o", 10);

    char c = 1;
    log("%d", c);
    log("%x", c);
    log("%o", c);
    u16 s = 2;
    log("%d", s);
    log("%x", s);
    log("%o", s);
    u32 i = 3;
    log("%d", i);
    log("%o", i);
    u64 lu = 4;
    log("%d", lu);
    i64 li = -4;
    log("%d", li);
    bool b = true;
    log("%d", b);
    log("%x", b);
    log("%o", b);
}

fn void test2a() {
    log("%d", "test"); // @error{format '%d' expects an integer argument}
}

fn void test2b() {
    log("%x", "test"); // @error{format '%x' expects an integer argument}
}

fn void test3a() {
    log("%d", nil); // @error{format '%d' expects an integer argument}
}

fn void test3b() {
    log("%x", nil); // @error{format '%x' expects an integer argument}
}

fn void test4(f32 f) {
    log("%d", f); // @error{format '%d' expects an integer argument}
}

type Enum enum u8 { A }

fn void test5(Enum e) {
    log("%d", e);
    log("%d", Enum.A);
}

fn void test6(f32 f) {
    log("%", f); // @error{missing conversion specifier at end of format string}
}

fn void test7(f32 f) {
    log("%*f", f, f); // @error{argument for '*' width/precision specifier must be an i32}
}

fn void test8(i32 i) {
    log("%d call%.*s", i, i != 1, "s");
    log("%d call%.*s", i, cast<i8>(i != 1), "s");
    log("%d call%.*s", i, cast<u8>(i != 1), "s");
    log("%d call%.*s", i, cast<i16>(i != 1), "s");
    log("%d call%.*s", i, cast<u16>(i != 1), "s");
    log("%hd", i);  // @error{format length modifier 'h' should be omitted}
}

fn void test9(i32 i) {
    log("%hhd", i);  // @error{format length modifier 'h' should be omitted}
}

fn void test10(i32 i) {
    log("%jd", i);  // @error{format length modifier 'j' should be omitted}
}

fn void test11(i32 i) {
    log("%ld", i);  // @error{format length modifier 'l' should be omitted}
}

fn void test12(i32 i) {
    log("%lld", i);  // @error{format length modifier 'l' should be omitted}
}

fn void test13(i32 i) {
    log("%td", i);  // @error{format length modifier 't' should be omitted}
}

fn void test14(i32 i) {
    log("%w32d", i);  // @error{format length modifier 'w' should be omitted}
}

fn void test15(i32 i) {
    log("%zd", i);  // @error{format length modifier 'z' should be omitted}
}

fn void test16(i32 i) {
    log("%Ld", i);  // @error{format length modifier 'L' should be omitted}
}

fn void test17(i32 i) {
    log("%i", i); // @error{invalid format specifier '%i', should use '%d'}
}

fn void test18(i32 i) {
    log("%u", i); // @error{invalid format specifier '%u', should use '%d'}
}
